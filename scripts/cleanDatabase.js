import mongoose from 'mongoose';
import dotenv from 'dotenv';
import Product from '../models/Product.js';
import Category from '../models/Category.js';

// Load environment variables
dotenv.config();

async function cleanDatabase() {
    try {
        // Connect to MongoDB
        const mongoUri = process.env.MONGODB_URI || 'mongodb+srv://23202001:23202001@cluster0.vgypvgq.mongodb.net/catstore?retryWrites=true&w=majority&appName=Cluster0';
        await mongoose.connect(mongoUri);
        console.log('‚úÖ Conectado a MongoDB Atlas');

        // Drop the entire products collection to remove all indexes
        try {
            await mongoose.connection.db.collection('products').drop();
            console.log('üóëÔ∏è Colecci√≥n products eliminada completamente');
        } catch (error) {
            if (error.message.includes('ns not found')) {
                console.log('‚ÑπÔ∏è La colecci√≥n products no exist√≠a');
            } else {
                console.log('‚ö†Ô∏è Error eliminando colecci√≥n products:', error.message);
            }
        }

        // Drop the categories collection as well
        try {
            await mongoose.connection.db.collection('categories').drop();
            console.log('üóëÔ∏è Colecci√≥n categories eliminada completamente');
        } catch (error) {
            if (error.message.includes('ns not found')) {
                console.log('‚ÑπÔ∏è La colecci√≥n categories no exist√≠a');
            } else {
                console.log('‚ö†Ô∏è Error eliminando colecci√≥n categories:', error.message);
            }
        }

        // Drop the users collection to remove problematic username index
        try {
            await mongoose.connection.db.collection('users').drop();
            console.log('üóëÔ∏è Colecci√≥n users eliminada completamente');
        } catch (error) {
            if (error.message.includes('ns not found')) {
                console.log('‚ÑπÔ∏è La colecci√≥n users no exist√≠a');
            } else {
                console.log('‚ö†Ô∏è Error eliminando colecci√≥n users:', error.message);
            }
        }

        console.log('üßπ Base de datos limpiada completamente');

    } catch (error) {
        console.error('‚ùå Error limpiando la base de datos:', error);
    } finally {
        await mongoose.connection.close();
        console.log('üîå Conexi√≥n a MongoDB cerrada');
    }
}

// Run the cleaning function
cleanDatabase();
